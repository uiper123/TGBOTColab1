#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—à–∏–±–∫–∏ split()
"""

import asyncio
import logging
import traceback
from video_editor import VideoEditor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

async def debug_split_error():
    """–û—Ç–ª–∞–¥–∫–∞ –æ—à–∏–±–∫–∏ split()"""
    
    print("üîç –û–¢–õ–ê–î–ö–ê –û–®–ò–ë–ö–ò split()")
    print("=" * 50)
    
    editor = VideoEditor()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    input_path = "temp/–ë–†–ê–¢–ò–®–ö–ò–ù –ü–†–û –°–í–û–Æ –ê–£–î–ò–¢–û–†–ò–Æ –ò –í–ù–û–í–¨ –ü–†–û –•–ï–°–£–°–ê.mp4"
    output_path = "output/debug_clip.mp4"
    start_time = 0.0
    duration = 30.0
    subtitles = []
    clip_number = 1
    config = None
    
    try:
        print(f"üé¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–ø–∞ –∏–∑: {input_path}")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º get_video_info
        print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º get_video_info...")
        video_info = editor.get_video_info(input_path)
        print(f"‚úÖ video_info –ø–æ–ª—É—á–µ–Ω: {video_info}")
        
        # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–∏–º _check_gpu_support
        print("2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º _check_gpu_support...")
        gpu_available = editor._check_gpu_support()
        print(f"‚úÖ GPU –¥–æ—Å—Ç—É–ø–µ–Ω: {gpu_available}")
        
        # –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–ø
        print("3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∫–ª–∏–ø...")
        success = await editor.create_styled_clip(
            input_path, output_path, start_time, duration, subtitles, clip_number, config
        )
        
        if success:
            print("‚úÖ –ö–ª–∏–ø —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå –ö–ª–∏–ø –Ω–µ —Å–æ–∑–¥–∞–Ω")
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        print(f"üìã –ü–û–õ–ù–´–ô TRACEBACK:")
        print(traceback.format_exc())

if __name__ == "__main__":
    asyncio.run(debug_split_error())