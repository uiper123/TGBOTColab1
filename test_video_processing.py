#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ
"""

import asyncio
import logging
from video_editor import VideoEditor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

async def test_video_processing():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏"""
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –≤–∏–¥–µ–æ—Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    video_editor = VideoEditor()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    test_video_path = "temp/chunk_0.mp4"  # –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –≤–∏–¥–µ–æ
    clip_duration = 30  # 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –∫–ª–∏–ø
    subtitles = []  # –ü—É—Å—Ç—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∞
    config = {
        'title': '–¢–ï–°–¢',
        'subtitle': '–ö–ª–∏–ø'
    }
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –û–ë–†–ê–ë–û–¢–ö–ò –í–ò–î–ï–û")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        import os
        if not os.path.exists(test_video_path):
            print(f"‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {test_video_path}")
            print("–°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç–µ")
            return
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: {test_video_path}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
        video_info = video_editor.get_video_info(test_video_path)
        print(f"üìπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ:")
        print(f"   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {video_info['duration']:.1f} —Å–µ–∫")
        print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {video_info['width']}x{video_info['height']}")
        print(f"   FPS: {video_info['fps']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–ø–æ–≤
        print("\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–ø–æ–≤...")
        clips = await video_editor.create_clips_parallel(
            test_video_path,
            clip_duration,
            subtitles,
            start_index=0,
            config=config,
            max_parallel=2  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è —Ç–µ—Å—Ç–∞
        )
        
        print(f"\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
        print(f"   –°–æ–∑–¥–∞–Ω–æ –∫–ª–∏–ø–æ–≤: {len(clips)}")
        for i, clip_path in enumerate(clips):
            print(f"   –ö–ª–∏–ø {i+1}: {clip_path}")
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_video_processing())