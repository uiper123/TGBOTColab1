#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è GPU –ø–∞–º—è—Ç–∏
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ nvidia-smi
"""

import asyncio
import logging
import os
from video_processor import VideoProcessor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

async def test_gpu_usage():
    """–¢–µ—Å—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è GPU"""
    
    print("üöÄ –¢–ï–°–¢ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ì–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø GPU")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
    processor = VideoProcessor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º GPU
    gpu_available = processor.video_editor._check_gpu_support()
    if not gpu_available:
        print("‚ùå GPU –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –¢–µ—Å—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ CPU")
        return
    
    print("‚úÖ GPU –¥–æ—Å—Ç—É–ø–µ–Ω! –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç...")
    print("\nüìä –ú–û–ù–ò–¢–û–†–ò–ù–ì GPU:")
    print("–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: watch -n 1 nvidia-smi")
    print("–í—ã –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ 10-12 –ì–ë –∏–∑ 15 –ì–ë Tesla T4")
    print("\n‚è≥ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
    
    await asyncio.sleep(5)
    
    # –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    config = {
        'duration': 30,  # 30-—Å–µ–∫—É–Ω–¥–Ω—ã–µ –∫–ª–∏–ø—ã
        'title': '–¢–ï–°–¢ GPU',
        'subtitle': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞'
    }
    
    # –ù–∞–π–¥–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ
    test_files = []
    for ext in ['.mp4', '.mkv', '.avi', '.mov']:
        for file in os.listdir('.'):
            if file.lower().endswith(ext):
                test_files.append(file)
    
    if not test_files:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!")
        print("–ü–æ–º–µ—Å—Ç–∏—Ç–µ –ª—é–±–æ–π –≤–∏–¥–µ–æ —Ñ–∞–π–ª –≤ —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É")
        return
    
    test_file = test_files[0]
    print(f"üé¨ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ: {test_file}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    print("\nüöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–£–Æ GPU –ù–ê–ì–†–£–ó–ö–£!")
    print("–°–ª–µ–¥–∏—Ç–µ –∑–∞ nvidia-smi - –¥–æ–ª–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è 10-12 –ì–ë VRAM")
    
    result = await processor.process_video_file(test_file, config)
    
    if result['success']:
        print(f"\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print(f"üìä –°–æ–∑–¥–∞–Ω–æ –∫–ª–∏–ø–æ–≤: {result['total_clips']}")
        print(f"üìÅ –§–∞–π–ª —Å–æ —Å—Å—ã–ª–∫–∞–º–∏: {result['links_file']}")
    else:
        print(f"\n‚ùå –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –° –û–®–ò–ë–ö–û–ô: {result['error']}")

if __name__ == "__main__":
    asyncio.run(test_gpu_usage())